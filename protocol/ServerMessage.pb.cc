// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ServerMessage.proto

#include "ServerMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace ServerMessage {
class MessageBase_ReqLoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageBase_ReqLogin>
      _instance;
} _MessageBase_ReqLogin_default_instance_;
class MessageBase_ResLoginDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageBase_ResLogin>
      _instance;
} _MessageBase_ResLogin_default_instance_;
class MessageBaseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageBase>
      _instance;
} _MessageBase_default_instance_;
}  // namespace ServerMessage
namespace protobuf_ServerMessage_2eproto {
void InitDefaultsMessageBase_ReqLoginImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ServerMessage::_MessageBase_ReqLogin_default_instance_;
    new (ptr) ::ServerMessage::MessageBase_ReqLogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerMessage::MessageBase_ReqLogin::InitAsDefaultInstance();
}

void InitDefaultsMessageBase_ReqLogin() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageBase_ReqLoginImpl);
}

void InitDefaultsMessageBase_ResLoginImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ServerMessage::_MessageBase_ResLogin_default_instance_;
    new (ptr) ::ServerMessage::MessageBase_ResLogin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerMessage::MessageBase_ResLogin::InitAsDefaultInstance();
}

void InitDefaultsMessageBase_ResLogin() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageBase_ResLoginImpl);
}

void InitDefaultsMessageBaseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ServerMessage::_MessageBase_default_instance_;
    new (ptr) ::ServerMessage::MessageBase();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ServerMessage::MessageBase::InitAsDefaultInstance();
}

void InitDefaultsMessageBase() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageBaseImpl);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerMessage::MessageBase_ReqLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerMessage::MessageBase_ReqLogin, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerMessage::MessageBase_ReqLogin, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerMessage::MessageBase_ResLogin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerMessage::MessageBase_ResLogin, res_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ServerMessage::MessageBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ServerMessage::MessageBase_ReqLogin)},
  { 7, -1, sizeof(::ServerMessage::MessageBase_ResLogin)},
  { 13, -1, sizeof(::ServerMessage::MessageBase)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerMessage::_MessageBase_ReqLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerMessage::_MessageBase_ResLogin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ServerMessage::_MessageBase_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ServerMessage.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023ServerMessage.proto\022\rServerMessage\"L\n\013"
      "MessageBase\032$\n\010ReqLogin\022\n\n\002id\030\001 \001(\005\022\014\n\004n"
      "ame\030\002 \001(\t\032\027\n\010ResLogin\022\013\n\003res\030\001 \001(\005*+\n\013Me"
      "ssageType\022\r\n\tkReqLogin\020\000\022\r\n\tkResLogin\020\001b"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 167);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ServerMessage.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ServerMessage_2eproto
namespace ServerMessage {
const ::google::protobuf::EnumDescriptor* MessageType_descriptor() {
  protobuf_ServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ServerMessage_2eproto::file_level_enum_descriptors[0];
}
bool MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void MessageBase_ReqLogin::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageBase_ReqLogin::kIdFieldNumber;
const int MessageBase_ReqLogin::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageBase_ReqLogin::MessageBase_ReqLogin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMessage_2eproto::InitDefaultsMessageBase_ReqLogin();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMessage.MessageBase.ReqLogin)
}
MessageBase_ReqLogin::MessageBase_ReqLogin(const MessageBase_ReqLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:ServerMessage.MessageBase.ReqLogin)
}

void MessageBase_ReqLogin::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  _cached_size_ = 0;
}

MessageBase_ReqLogin::~MessageBase_ReqLogin() {
  // @@protoc_insertion_point(destructor:ServerMessage.MessageBase.ReqLogin)
  SharedDtor();
}

void MessageBase_ReqLogin::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MessageBase_ReqLogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageBase_ReqLogin::descriptor() {
  ::protobuf_ServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageBase_ReqLogin& MessageBase_ReqLogin::default_instance() {
  ::protobuf_ServerMessage_2eproto::InitDefaultsMessageBase_ReqLogin();
  return *internal_default_instance();
}

MessageBase_ReqLogin* MessageBase_ReqLogin::New(::google::protobuf::Arena* arena) const {
  MessageBase_ReqLogin* n = new MessageBase_ReqLogin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageBase_ReqLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMessage.MessageBase.ReqLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = 0;
  _internal_metadata_.Clear();
}

bool MessageBase_ReqLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMessage.MessageBase.ReqLogin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ServerMessage.MessageBase.ReqLogin.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMessage.MessageBase.ReqLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMessage.MessageBase.ReqLogin)
  return false;
#undef DO_
}

void MessageBase_ReqLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMessage.MessageBase.ReqLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerMessage.MessageBase.ReqLogin.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerMessage.MessageBase.ReqLogin)
}

::google::protobuf::uint8* MessageBase_ReqLogin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMessage.MessageBase.ReqLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ServerMessage.MessageBase.ReqLogin.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerMessage.MessageBase.ReqLogin)
  return target;
}

size_t MessageBase_ReqLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMessage.MessageBase.ReqLogin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageBase_ReqLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMessage.MessageBase.ReqLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageBase_ReqLogin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageBase_ReqLogin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMessage.MessageBase.ReqLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMessage.MessageBase.ReqLogin)
    MergeFrom(*source);
  }
}

void MessageBase_ReqLogin::MergeFrom(const MessageBase_ReqLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMessage.MessageBase.ReqLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void MessageBase_ReqLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMessage.MessageBase.ReqLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageBase_ReqLogin::CopyFrom(const MessageBase_ReqLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMessage.MessageBase.ReqLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageBase_ReqLogin::IsInitialized() const {
  return true;
}

void MessageBase_ReqLogin::Swap(MessageBase_ReqLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageBase_ReqLogin::InternalSwap(MessageBase_ReqLogin* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageBase_ReqLogin::GetMetadata() const {
  protobuf_ServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageBase_ResLogin::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageBase_ResLogin::kResFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageBase_ResLogin::MessageBase_ResLogin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMessage_2eproto::InitDefaultsMessageBase_ResLogin();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMessage.MessageBase.ResLogin)
}
MessageBase_ResLogin::MessageBase_ResLogin(const MessageBase_ResLogin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  res_ = from.res_;
  // @@protoc_insertion_point(copy_constructor:ServerMessage.MessageBase.ResLogin)
}

void MessageBase_ResLogin::SharedCtor() {
  res_ = 0;
  _cached_size_ = 0;
}

MessageBase_ResLogin::~MessageBase_ResLogin() {
  // @@protoc_insertion_point(destructor:ServerMessage.MessageBase.ResLogin)
  SharedDtor();
}

void MessageBase_ResLogin::SharedDtor() {
}

void MessageBase_ResLogin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageBase_ResLogin::descriptor() {
  ::protobuf_ServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageBase_ResLogin& MessageBase_ResLogin::default_instance() {
  ::protobuf_ServerMessage_2eproto::InitDefaultsMessageBase_ResLogin();
  return *internal_default_instance();
}

MessageBase_ResLogin* MessageBase_ResLogin::New(::google::protobuf::Arena* arena) const {
  MessageBase_ResLogin* n = new MessageBase_ResLogin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageBase_ResLogin::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMessage.MessageBase.ResLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  res_ = 0;
  _internal_metadata_.Clear();
}

bool MessageBase_ResLogin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMessage.MessageBase.ResLogin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 res = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &res_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMessage.MessageBase.ResLogin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMessage.MessageBase.ResLogin)
  return false;
#undef DO_
}

void MessageBase_ResLogin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMessage.MessageBase.ResLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 res = 1;
  if (this->res() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->res(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerMessage.MessageBase.ResLogin)
}

::google::protobuf::uint8* MessageBase_ResLogin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMessage.MessageBase.ResLogin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 res = 1;
  if (this->res() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->res(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerMessage.MessageBase.ResLogin)
  return target;
}

size_t MessageBase_ResLogin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMessage.MessageBase.ResLogin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 res = 1;
  if (this->res() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->res());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageBase_ResLogin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMessage.MessageBase.ResLogin)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageBase_ResLogin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageBase_ResLogin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMessage.MessageBase.ResLogin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMessage.MessageBase.ResLogin)
    MergeFrom(*source);
  }
}

void MessageBase_ResLogin::MergeFrom(const MessageBase_ResLogin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMessage.MessageBase.ResLogin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.res() != 0) {
    set_res(from.res());
  }
}

void MessageBase_ResLogin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMessage.MessageBase.ResLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageBase_ResLogin::CopyFrom(const MessageBase_ResLogin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMessage.MessageBase.ResLogin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageBase_ResLogin::IsInitialized() const {
  return true;
}

void MessageBase_ResLogin::Swap(MessageBase_ResLogin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageBase_ResLogin::InternalSwap(MessageBase_ResLogin* other) {
  using std::swap;
  swap(res_, other->res_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageBase_ResLogin::GetMetadata() const {
  protobuf_ServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageBase::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageBase::MessageBase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ServerMessage_2eproto::InitDefaultsMessageBase();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ServerMessage.MessageBase)
}
MessageBase::MessageBase(const MessageBase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ServerMessage.MessageBase)
}

void MessageBase::SharedCtor() {
  _cached_size_ = 0;
}

MessageBase::~MessageBase() {
  // @@protoc_insertion_point(destructor:ServerMessage.MessageBase)
  SharedDtor();
}

void MessageBase::SharedDtor() {
}

void MessageBase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageBase::descriptor() {
  ::protobuf_ServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageBase& MessageBase::default_instance() {
  ::protobuf_ServerMessage_2eproto::InitDefaultsMessageBase();
  return *internal_default_instance();
}

MessageBase* MessageBase::New(::google::protobuf::Arena* arena) const {
  MessageBase* n = new MessageBase;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageBase::Clear() {
// @@protoc_insertion_point(message_clear_start:ServerMessage.MessageBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool MessageBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ServerMessage.MessageBase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ServerMessage.MessageBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ServerMessage.MessageBase)
  return false;
#undef DO_
}

void MessageBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ServerMessage.MessageBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ServerMessage.MessageBase)
}

::google::protobuf::uint8* MessageBase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ServerMessage.MessageBase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ServerMessage.MessageBase)
  return target;
}

size_t MessageBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ServerMessage.MessageBase)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageBase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ServerMessage.MessageBase)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageBase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageBase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ServerMessage.MessageBase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ServerMessage.MessageBase)
    MergeFrom(*source);
  }
}

void MessageBase::MergeFrom(const MessageBase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ServerMessage.MessageBase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MessageBase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ServerMessage.MessageBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageBase::CopyFrom(const MessageBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ServerMessage.MessageBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageBase::IsInitialized() const {
  return true;
}

void MessageBase::Swap(MessageBase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageBase::InternalSwap(MessageBase* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageBase::GetMetadata() const {
  protobuf_ServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ServerMessage

// @@protoc_insertion_point(global_scope)
